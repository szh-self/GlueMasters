# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'tpl_cpt.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_Dialog_tpl_cpt(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(1200, 1030)
        Dialog.setStyleSheet("QDialog {\n"
"    border: 2px solid #f0f8ff; /* 设置对话框的边框颜色 */\n"
"    border-radius: 10px; /* 设置对话框的圆角 */\n"
"background-color: white;\n"
"}")
        self.graphicsView = QtWidgets.QGraphicsView(Dialog)
        self.graphicsView.setGeometry(QtCore.QRect(0, 100, 1200, 900))
        self.graphicsView.setStyleSheet("\n"
"    border: 1px solid black; /* 设置对话框的边框颜色 */")
        self.graphicsView.setObjectName("graphicsView")
        self.btnSaveTpl = QtWidgets.QPushButton(Dialog)
        self.btnSaveTpl.setGeometry(QtCore.QRect(800, 2, 400, 46))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.btnSaveTpl.setFont(font)
        self.btnSaveTpl.setStyleSheet("\n"
"QPushButton {\n"
"    background-color: #4CAF50; /* 设置按钮的背景颜色 */\n"
"background-color: #f0f8ff;   /* 背景色 */\n"
"    color: black; /* 设置按钮的文本颜色 */\n"
"    border: none; /* 去掉按钮的边框 */\n"
"    padding: 10px; /* 设置按钮的内边距 */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #45a049; /* 设置按钮鼠标悬停时的背景颜色 */\n"
"}\n"
"QPushButton:pressed {\n"
"    background-color: #bbbbbb; /* 按钮按下时的背景颜色 */\n"
"}")
        self.btnSaveTpl.setObjectName("btnSaveTpl")
        self.btnCapture = QtWidgets.QPushButton(Dialog)
        self.btnCapture.setGeometry(QtCore.QRect(0, 2, 400, 46))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.btnCapture.setFont(font)
        self.btnCapture.setStyleSheet("\n"
"QPushButton {\n"
"    background-color: #4CAF50; /* 设置按钮的背景颜色 */\n"
"background-color: #f0f8ff;   /* 背景色 */\n"
"    color: black; /* 设置按钮的文本颜色 */\n"
"    border: none; /* 去掉按钮的边框 */\n"
"    padding: 10px; /* 设置按钮的内边距 */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #45a049; /* 设置按钮鼠标悬停时的背景颜色 */\n"
"}\n"
"QPushButton:pressed {\n"
"    background-color: #bbbbbb; /* 按钮按下时的背景颜色 */\n"
"}")
        self.btnCapture.setObjectName("btnCapture")
        self.btnCutTpl = QtWidgets.QPushButton(Dialog)
        self.btnCutTpl.setGeometry(QtCore.QRect(400, 2, 400, 46))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.btnCutTpl.setFont(font)
        self.btnCutTpl.setStyleSheet("\n"
"QPushButton {\n"
"    background-color: #4CAF50; /* 设置按钮的背景颜色 */\n"
"background-color: #f0f8ff;   /* 背景色 */\n"
"    color: black; /* 设置按钮的文本颜色 */\n"
"    border: none; /* 去掉按钮的边框 */\n"
"    padding: 10px; /* 设置按钮的内边距 */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #45a049; /* 设置按钮鼠标悬停时的背景颜色 */\n"
"}\n"
"QPushButton:pressed {\n"
"    background-color: #bbbbbb; /* 按钮按下时的背景颜色 */\n"
"}")
        self.btnCutTpl.setObjectName("btnCutTpl")
        self.label = QtWidgets.QLabel(Dialog)
        self.label.setGeometry(QtCore.QRect(-1, 50, 1202, 50))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.label.setFont(font)
        self.label.setStyleSheet("\n"
"background-color: #f0f8ff;   /* 背景色 */\n"
"    border-radius: 0px;  /* 圆角 */\n"
"    color: red;  /* 文字颜色 */\n"
"    selection-background-color: #b8d6f3;  /* 选中文本背景色 */\n"
"    selection-color: #000000;  /* 选中文本颜色 */\n"
"border: black;\n"
"    border: 1px solid black; /* 设置对话框的边框颜色 */")
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "模板拍摄窗口"))
        self.btnSaveTpl.setText(_translate("Dialog", "保存模板"))
        self.btnCapture.setText(_translate("Dialog", "拍摄模板"))
        self.btnCutTpl.setText(_translate("Dialog", "截取模板"))
        self.label.setText(_translate("Dialog", "提示信息"))
