# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1680, 1050)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(0, 0, 1680, 1000))
        self.tabWidget.setAutoFillBackground(False)
        self.tabWidget.setStyleSheet("    border: 2px solid #f0f8ff; /* 设置对话框的边框颜色 */\n"
"    border-radius: 10px; /* 设置对话框的圆角 */\n"
"background-color: white;")
        self.tabWidget.setObjectName("tabWidget")
        self.tabWidgetPage1 = QtWidgets.QWidget()
        self.tabWidgetPage1.setObjectName("tabWidgetPage1")
        self.label_video = QtWidgets.QLabel(self.tabWidgetPage1)
        self.label_video.setGeometry(QtCore.QRect(610, 20, 1048, 786))
        font = QtGui.QFont()
        font.setPointSize(28)
        self.label_video.setFont(font)
        self.label_video.setAutoFillBackground(False)
        self.label_video.setStyleSheet("background-color: #eeeeee;   /* 背景色 */\n"
"    border: 1px solid #cccccc;  /* 灰色边框 */\n"
" border: 2px solid #b0c4de;   /* 边框 */")
        self.label_video.setAlignment(QtCore.Qt.AlignCenter)
        self.label_video.setObjectName("label_video")
        self.label_beltspeed = QtWidgets.QLabel(self.tabWidgetPage1)
        self.label_beltspeed.setGeometry(QtCore.QRect(610, 840, 911, 60))
        font = QtGui.QFont()
        font.setPointSize(24)
        self.label_beltspeed.setFont(font)
        self.label_beltspeed.setAutoFillBackground(False)
        self.label_beltspeed.setStyleSheet("background-color: #eeeeee;   /* 背景色 */\n"
"    border: 1px solid #cccccc;  /* 灰色边框 */\n"
" border: 2px solid #b0c4de;   /* 边框 */")
        self.label_beltspeed.setAlignment(QtCore.Qt.AlignCenter)
        self.label_beltspeed.setObjectName("label_beltspeed")
        self.tableWidget_number = QtWidgets.QTableWidget(self.tabWidgetPage1)
        self.tableWidget_number.setGeometry(QtCore.QRect(20, 20, 570, 320))
        self.tableWidget_number.setStyleSheet("QTableWidget {\n"
"    background-color: #f0f8ff;       /* AliceBlue 背景 */\n"
"    border: 2px solid #b0c4de;       /* LightSteelBlue 边框（修正重复定义） */\n"
"    border-radius: 6px;\n"
"    gridline-color: #d3d3d3;         /* LightGray 网格线 */\n"
"    font-family: \"Segoe UI\", \"Microsoft YaHei\";\n"
"    font-size: 13px;\n"
"    selection-background-color: #4682b4;  /* SteelBlue 选中背景 */\n"
"    selection-color: #ffffff;\n"
"    outline: none;                   /* 移除焦点虚线框 */\n"
"}\n"
"\n"
"/* 表头样式 */\n"
"QHeaderView::section {\n"
"    background-color: #4682b4;       /* SteelBlue 表头 */\n"
"    color: white;\n"
"    padding: 8px;\n"
"    border: none;Q\n"
"    font-weight: bold;\n"
"    font-size: 14px;\n"
"    border-radius: 4px 4px 0 0;      /* 仅顶部圆角 */\n"
"    margin: 0;\n"
"    border-bottom: 2px solid #3a6a8c; /* 加深底部边框 */\n"
"}\n"
"\n"
"/* 单元格基础样式 */\n"
"QTableWidget::item {\n"
"    background-color: #ffffff;\n"
"    color: #000000;                  /* 深灰文字提高可读性 */\n"
"    border-bottom: 1px solid #e6e6fa; /* Lavender 下边框 */\n"
"    padding: 4px 8px;                /* 增加单元格内边距 */\n"
"}\n"
"\n"
"/* 交替行颜色 */\n"
"QTableWidget::item:alternate {\n"
"    background-color: #f0f8ff;       /* AliceBlue 交替行 */\n"
"}\n"
"\n"
"/* 悬停效果 */\n"
"QTableWidget::item:hover {\n"
"    background-color: #e6e6fa;       /* Lavender 悬停 */\n"
"    color: #222222;\n"
"}\n"
"\n"
"/* 选中状态 */\n"
"QTableWidget::item:selected {\n"
"    background-color: #5f9ea0;       /* CadetBlue 选中 */\n"
"    color: white;\n"
"}\n"
"\n"
"/* 角落按钮（同步表头样式） */\n"
"QTableWidget QTableCornerButton::section {\n"
"    background-color: #4682b4;\n"
"    border-radius: 4px 0 0 0;\n"
"    border-bottom: 2px solid #3a6a8c;\n"
"}\n"
"\n"
"/* ================== */\n"
"/* 滚动条优化样式 */\n"
"/* ================== */\n"
"QScrollBar:vertical {\n"
"    border: none;\n"
"    background-color: #f0f8ff;\n"
"    width: 12px;\n"
"    margin: 0;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical {\n"
"    background-color: #a0b4ce;       /* 比边框稍深的蓝色 */\n"
"    min-height: 30px;\n"
"    border-radius: 6px;\n"
"    margin: 2px;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:hover {\n"
"    background-color: #8fa8c7;       /* 悬停加深 */\n"
"}\n"
"\n"
"QScrollBar::add-line:vertical,\n"
"QScrollBar::sub-line:vertical {\n"
"    height: 0;\n"
"    background: none;\n"
"}\n"
"\n"
"QScrollBar::add-page:vertical,\n"
"QScrollBar::sub-page:vertical {\n"
"    background: none;\n"
"}")
        self.tableWidget_number.setObjectName("tableWidget_number")
        self.tableWidget_number.setColumnCount(2)
        self.tableWidget_number.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_number.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_number.setHorizontalHeaderItem(1, item)
        self.textEdit = QtWidgets.QTextEdit(self.tabWidgetPage1)
        self.textEdit.setGeometry(QtCore.QRect(20, 360, 570, 240))
        self.textEdit.setStyleSheet("\n"
"background-color: #eeeeee;   /* 背景色 */\n"
"    border: 1px solid #cccccc;  /* 灰色边框 */\n"
" border: 2px solid #b0c4de;   /* 边框 */\n"
"    border-radius: 10px;  /* 圆角 */\n"
"    padding: 5px;  /* 内边距 */\n"
"    color: #333333;  /* 文字颜色 */\n"
"    font-family: \"Microsoft YaHei\", sans-serif;  /* 字体 */\n"
"    font-size: 32px;  /* 字体大小 */\n"
"    selection-background-color: #b8d6f3;  /* 选中文本背景色 */\n"
"    selection-color: #000000;  /* 选中文本颜色 */")
        self.textEdit.setObjectName("textEdit")
        self.btn_Reset = QtWidgets.QPushButton(self.tabWidgetPage1)
        self.btn_Reset.setGeometry(QtCore.QRect(105, 810, 400, 70))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.btn_Reset.setFont(font)
        self.btn_Reset.setStyleSheet("QPushButton {\n"
"border: 1px solid black; /* 浅蓝色边框 */\n"
"border-radius: 10px; /* 圆角 */\n"
"background-color: #ffffff;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #eeeeee; /* 鼠标悬停时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #dddddd; /* 按钮按下时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"    background-color: #cccccc; /* 按钮禁用时的背景颜色 */\n"
"    color: black; /* 按钮禁用时的文本颜色 */\n"
"    border: 1px solid black; /* 按钮禁用时的边框颜色 */\n"
"}")
        self.btn_Reset.setObjectName("btn_Reset")
        self.btn_Stop = QtWidgets.QPushButton(self.tabWidgetPage1)
        self.btn_Stop.setGeometry(QtCore.QRect(105, 725, 400, 70))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.btn_Stop.setFont(font)
        self.btn_Stop.setStyleSheet("QPushButton {\n"
"border: 1px solid black; /* 浅蓝色边框 */\n"
"border-radius: 10px; /* 圆角 */\n"
"background-color: #ffffff;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #eeeeee; /* 鼠标悬停时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #dddddd; /* 按钮按下时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"    background-color: #cccccc; /* 按钮禁用时的背景颜色 */\n"
"    color: black; /* 按钮禁用时的文本颜色 */\n"
"    border: 1px solid black; /* 按钮禁用时的边框颜色 */\n"
"}")
        self.btn_Stop.setObjectName("btn_Stop")
        self.btn_Start = QtWidgets.QPushButton(self.tabWidgetPage1)
        self.btn_Start.setGeometry(QtCore.QRect(105, 640, 400, 70))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.btn_Start.setFont(font)
        self.btn_Start.setStyleSheet("QPushButton {\n"
"border: 1px solid black; /* 浅蓝色边框 */\n"
"border-radius: 10px; /* 圆角 */\n"
"background-color: #ffffff;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #eeeeee; /* 鼠标悬停时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #dddddd; /* 按钮按下时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"    background-color: #cccccc; /* 按钮禁用时的背景颜色 */\n"
"    color: black; /* 按钮禁用时的文本颜色 */\n"
"    border: 1px solid black; /* 按钮禁用时的边框颜色 */\n"
"}")
        self.btn_Start.setObjectName("btn_Start")
        self.frame_4 = QtWidgets.QFrame(self.tabWidgetPage1)
        self.frame_4.setGeometry(QtCore.QRect(20, 620, 571, 281))
        self.frame_4.setStyleSheet("background-color: #eeeeee;   /* 背景色 */\n"
"    border: 1px solid #cccccc;  /* 灰色边框 */\n"
" border: 2px solid #b0c4de;   /* 边框 */")
        self.frame_4.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_4.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_4.setObjectName("frame_4")
        self.label_led_2 = QtWidgets.QLabel(self.tabWidgetPage1)
        self.label_led_2.setGeometry(QtCore.QRect(1560, 840, 60, 60))
        self.label_led_2.setStyleSheet("background-color: green;\n"
"border-radius: 30px;")
        self.label_led_2.setText("")
        self.label_led_2.setObjectName("label_led_2")
        self.frame_4.raise_()
        self.label_video.raise_()
        self.label_beltspeed.raise_()
        self.tableWidget_number.raise_()
        self.textEdit.raise_()
        self.btn_Reset.raise_()
        self.btn_Stop.raise_()
        self.btn_Start.raise_()
        self.label_led_2.raise_()
        self.tabWidget.addTab(self.tabWidgetPage1, "")
        self.tabWidgetPage2 = QtWidgets.QWidget()
        self.tabWidgetPage2.setObjectName("tabWidgetPage2")
        self.graphicsView = QtWidgets.QGraphicsView(self.tabWidgetPage2)
        self.graphicsView.setGeometry(QtCore.QRect(5, 5, 1280, 630))
        self.graphicsView.setStyleSheet("background-color: #eeeeee;   /* 背景色 */\n"
"    border: 1px solid #cccccc;  /* 灰色边框 */\n"
" border: 2px solid #b0c4de;   /* 边框 */")
        self.graphicsView.setObjectName("graphicsView")
        self.tableWidget = QtWidgets.QTableWidget(self.tabWidgetPage2)
        self.tableWidget.setGeometry(QtCore.QRect(5, 640, 1040, 280))
        self.tableWidget.setStyleSheet("QTableWidget {\n"
"    background-color: #f0f8ff;       /* AliceBlue 背景 */\n"
"    border: 2px solid #b0c4de;       /* LightSteelBlue 边框（修正重复定义） */\n"
"    border-radius: 6px;\n"
"    gridline-color: #d3d3d3;         /* LightGray 网格线 */\n"
"    font-family: \"Segoe UI\", \"Microsoft YaHei\";\n"
"    font-size: 13px;\n"
"    selection-background-color: #4682b4;  /* SteelBlue 选中背景 */\n"
"    selection-color: #ffffff;\n"
"    outline: none;                   /* 移除焦点虚线框 */\n"
"}\n"
"\n"
"/* 表头样式 */\n"
"QHeaderView::section {\n"
"    background-color: #4682b4;       /* SteelBlue 表头 */\n"
"    color: white;\n"
"    padding: 8px;\n"
"    border: none;Q\n"
"    font-weight: bold;\n"
"    font-size: 14px;\n"
"    border-radius: 4px 4px 0 0;      /* 仅顶部圆角 */\n"
"    margin: 0;\n"
"    border-bottom: 2px solid #3a6a8c; /* 加深底部边框 */\n"
"}\n"
"\n"
"/* 单元格基础样式 */\n"
"QTableWidget::item {\n"
"    background-color: #ffffff;\n"
"    color: #000000;                  /* 深灰文字提高可读性 */\n"
"    border-bottom: 1px solid #e6e6fa; /* Lavender 下边框 */\n"
"    padding: 4px 8px;                /* 增加单元格内边距 */\n"
"}\n"
"\n"
"/* 交替行颜色 */\n"
"QTableWidget::item:alternate {\n"
"    background-color: #f0f8ff;       /* AliceBlue 交替行 */\n"
"}\n"
"\n"
"/* 悬停效果 */\n"
"QTableWidget::item:hover {\n"
"    background-color: #e6e6fa;       /* Lavender 悬停 */\n"
"    color: #222222;\n"
"}\n"
"\n"
"/* 选中状态 */\n"
"QTableWidget::item:selected {\n"
"    background-color: #5f9ea0;       /* CadetBlue 选中 */\n"
"    color: white;\n"
"}\n"
"\n"
"/* 角落按钮（同步表头样式） */\n"
"QTableWidget QTableCornerButton::section {\n"
"    background-color: #4682b4;\n"
"    border-radius: 4px 0 0 0;\n"
"    border-bottom: 2px solid #3a6a8c;\n"
"}\n"
"\n"
"/* ================== */\n"
"/* 滚动条优化样式 */\n"
"/* ================== */\n"
"QScrollBar:vertical {\n"
"    border: none;\n"
"    background-color: #f0f8ff;\n"
"    width: 12px;\n"
"    margin: 0;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical {\n"
"    background-color: #a0b4ce;       /* 比边框稍深的蓝色 */\n"
"    min-height: 30px;\n"
"    border-radius: 6px;\n"
"    margin: 2px;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:hover {\n"
"    background-color: #8fa8c7;       /* 悬停加深 */\n"
"}\n"
"\n"
"QScrollBar::add-line:vertical,\n"
"QScrollBar::sub-line:vertical {\n"
"    height: 0;\n"
"    background: none;\n"
"}\n"
"\n"
"QScrollBar::add-page:vertical,\n"
"QScrollBar::sub-page:vertical {\n"
"    background: none;\n"
"}")
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(6)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(5, item)
        self.tableWidget_product = QtWidgets.QTableWidget(self.tabWidgetPage2)
        self.tableWidget_product.setGeometry(QtCore.QRect(1300, 5, 370, 300))
        self.tableWidget_product.setStyleSheet("QTableWidget {\n"
"    background-color: #f0f8ff;       /* AliceBlue 背景 */\n"
"    border: 2px solid #b0c4de;       /* LightSteelBlue 边框（修正重复定义） */\n"
"    border-radius: 6px;\n"
"    gridline-color: #d3d3d3;         /* LightGray 网格线 */\n"
"    font-family: \"Segoe UI\", \"Microsoft YaHei\";\n"
"    font-size: 13px;\n"
"    selection-background-color: #4682b4;  /* SteelBlue 选中背景 */\n"
"    selection-color: #ffffff;\n"
"    outline: none;                   /* 移除焦点虚线框 */\n"
"}\n"
"\n"
"/* 表头样式 */\n"
"QHeaderView::section {\n"
"    background-color: #4682b4;       /* SteelBlue 表头 */\n"
"    color: white;\n"
"    padding: 8px;\n"
"    border: none;Q\n"
"    font-weight: bold;\n"
"    font-size: 14px;\n"
"    border-radius: 4px 4px 0 0;      /* 仅顶部圆角 */\n"
"    margin: 0;\n"
"    border-bottom: 2px solid #3a6a8c; /* 加深底部边框 */\n"
"}\n"
"\n"
"/* 单元格基础样式 */\n"
"QTableWidget::item {\n"
"    background-color: #ffffff;\n"
"    color: #000000;                  /* 深灰文字提高可读性 */\n"
"    border-bottom: 1px solid #e6e6fa; /* Lavender 下边框 */\n"
"    padding: 0px 0px;                /* 增加单元格内边距 */\n"
"}\n"
"\n"
"/* 交替行颜色 */\n"
"QTableWidget::item:alternate {\n"
"    background-color: #f0f8ff;       /* AliceBlue 交替行 */\n"
"}\n"
"\n"
"/* 悬停效果 */\n"
"QTableWidget::item:hover {\n"
"    background-color: #e6e6fa;       /* Lavender 悬停 */\n"
"    color: #222222;\n"
"}\n"
"\n"
"/* 选中状态 */\n"
"QTableWidget::item:selected {\n"
"    background-color: #5f9ea0;\n"
"    color: white;\n"
"}\n"
"\n"
"/* 角落按钮（同步表头样式） */\n"
"QTableWidget QTableCornerButton::section {\n"
"    background-color: #4682b4;\n"
"    border-radius: 4px 0 0 0;\n"
"    border-bottom: 2px solid #3a6a8c;\n"
"}\n"
"\n"
"/* ================== */\n"
"/* 滚动条优化样式 */\n"
"/* ================== */\n"
"QScrollBar:vertical {\n"
"    border: none;\n"
"    background-color: #f0f8ff;\n"
"    width: 12px;\n"
"    margin: 0;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical {\n"
"    background-color: #a0b4ce;       /* 比边框稍深的蓝色 */\n"
"    min-height: 30px;\n"
"    border-radius: 6px;\n"
"    margin: 2px;\n"
"}\n"
"\n"
"QScrollBar::handle:vertical:hover {\n"
"    background-color: #8fa8c7;       /* 悬停加深 */\n"
"}\n"
"\n"
"QScrollBar::add-line:vertical,\n"
"QScrollBar::sub-line:vertical {\n"
"    height: 0;\n"
"    background: none;\n"
"}\n"
"\n"
"QScrollBar::add-page:vertical,\n"
"QScrollBar::sub-page:vertical {\n"
"    background: none;\n"
"}")
        self.tableWidget_product.setObjectName("tableWidget_product")
        self.tableWidget_product.setColumnCount(2)
        self.tableWidget_product.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_product.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_product.setHorizontalHeaderItem(1, item)
        self.textEdit_2 = QtWidgets.QTextEdit(self.tabWidgetPage2)
        self.textEdit_2.setGeometry(QtCore.QRect(1300, 589, 370, 331))
        self.textEdit_2.setStyleSheet("\n"
"background-color: #eeeeee;   /* 背景色 */\n"
"    border: 1px solid #cccccc;  /* 灰色边框 */\n"
" border: 2px solid #b0c4de;   /* 边框 */\n"
"    border-radius: 10px;  /* 圆角 */\n"
"    padding: 5px;  /* 内边距 */\n"
"    color: #333333;  /* 文字颜色 */\n"
"    font-family: \"Microsoft YaHei\", sans-serif;  /* 字体 */\n"
"    font-size: 32px;  /* 字体大小 */\n"
"    selection-background-color: #b8d6f3;  /* 选中文本背景色 */\n"
"    selection-color: #000000;  /* 选中文本颜色 */")
        self.textEdit_2.setObjectName("textEdit_2")
        self.frame_2 = QtWidgets.QFrame(self.tabWidgetPage2)
        self.frame_2.setGeometry(QtCore.QRect(1300, 320, 370, 251))
        self.frame_2.setStyleSheet("background-color: #eeeeee;   /* 背景色 */\n"
"    border: 1px solid #cccccc;  /* 灰色边框 */\n"
" border: 2px solid #b0c4de;   /* 边框 */")
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.btnAddProduct = QtWidgets.QPushButton(self.frame_2)
        self.btnAddProduct.setGeometry(QtCore.QRect(10, 20, 160, 50))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.btnAddProduct.setFont(font)
        self.btnAddProduct.setStyleSheet("QPushButton {\n"
"border: 1px solid black; /* 浅蓝色边框 */\n"
"border-radius: 5px; /* 圆角 */\n"
"background-color: #ffffff;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #eeeeee; /* 鼠标悬停时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #dddddd; /* 按钮按下时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"    background-color: #cccccc; /* 按钮禁用时的背景颜色 */\n"
"    color: black; /* 按钮禁用时的文本颜色 */\n"
"    border: 1px solid black; /* 按钮禁用时的边框颜色 */\n"
"}")
        self.btnAddProduct.setObjectName("btnAddProduct")
        self.btnExport = QtWidgets.QPushButton(self.frame_2)
        self.btnExport.setGeometry(QtCore.QRect(10, 100, 160, 50))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.btnExport.setFont(font)
        self.btnExport.setStyleSheet("QPushButton {\n"
"border: 1px solid black; /* 浅蓝色边框 */\n"
"border-radius: 5px; /* 圆角 */\n"
"background-color: #ffffff;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #eeeeee; /* 鼠标悬停时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #dddddd; /* 按钮按下时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"    background-color: #cccccc; /* 按钮禁用时的背景颜色 */\n"
"    color: black; /* 按钮禁用时的文本颜色 */\n"
"    border: 1px solid black; /* 按钮禁用时的边框颜色 */\n"
"}")
        self.btnExport.setObjectName("btnExport")
        self.btnDeleteProduct = QtWidgets.QPushButton(self.frame_2)
        self.btnDeleteProduct.setGeometry(QtCore.QRect(10, 180, 160, 50))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.btnDeleteProduct.setFont(font)
        self.btnDeleteProduct.setStyleSheet("QPushButton {\n"
"border: 1px solid black; /* 浅蓝色边框 */\n"
"border-radius: 5px; /* 圆角 */\n"
"background-color: #ffffff;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #eeeeee; /* 鼠标悬停时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #dddddd; /* 按钮按下时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"    background-color: #cccccc; /* 按钮禁用时的背景颜色 */\n"
"    color: black; /* 按钮禁用时的文本颜色 */\n"
"    border: 1px solid black; /* 按钮禁用时的边框颜色 */\n"
"}")
        self.btnDeleteProduct.setObjectName("btnDeleteProduct")
        self.btnSave = QtWidgets.QPushButton(self.frame_2)
        self.btnSave.setGeometry(QtCore.QRect(200, 180, 160, 50))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.btnSave.setFont(font)
        self.btnSave.setStyleSheet("QPushButton {\n"
"border: 1px solid black; /* 浅蓝色边框 */\n"
"border-radius: 5px; /* 圆角 */\n"
"background-color: #ffffff;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #eeeeee; /* 鼠标悬停时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #dddddd; /* 按钮按下时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"    background-color: #cccccc; /* 按钮禁用时的背景颜色 */\n"
"    color: black; /* 按钮禁用时的文本颜色 */\n"
"    border: 1px solid black; /* 按钮禁用时的边框颜色 */\n"
"}")
        self.btnSave.setObjectName("btnSave")
        self.btnRestore = QtWidgets.QPushButton(self.frame_2)
        self.btnRestore.setGeometry(QtCore.QRect(200, 100, 160, 50))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.btnRestore.setFont(font)
        self.btnRestore.setStyleSheet("QPushButton {\n"
"border: 1px solid black; /* 浅蓝色边框 */\n"
"border-radius: 5px; /* 圆角 */\n"
"background-color: #ffffff;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #eeeeee; /* 鼠标悬停时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #dddddd; /* 按钮按下时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"    background-color: #cccccc; /* 按钮禁用时的背景颜色 */\n"
"    color: black; /* 按钮禁用时的文本颜色 */\n"
"    border: 1px solid black; /* 按钮禁用时的边框颜色 */\n"
"}")
        self.btnRestore.setObjectName("btnRestore")
        self.btnEdit = QtWidgets.QPushButton(self.frame_2)
        self.btnEdit.setGeometry(QtCore.QRect(200, 20, 160, 50))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.btnEdit.setFont(font)
        self.btnEdit.setStyleSheet("QPushButton {\n"
"border: 1px solid black; /* 浅蓝色边框 */\n"
"border-radius: 5px; /* 圆角 */\n"
"background-color: #ffffff;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #eeeeee; /* 鼠标悬停时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #dddddd; /* 按钮按下时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"    background-color: #cccccc; /* 按钮禁用时的背景颜色 */\n"
"    color: black; /* 按钮禁用时的文本颜色 */\n"
"    border: 1px solid black; /* 按钮禁用时的边框颜色 */\n"
"}")
        self.btnEdit.setObjectName("btnEdit")
        self.frame_3 = QtWidgets.QFrame(self.tabWidgetPage2)
        self.frame_3.setGeometry(QtCore.QRect(1050, 640, 235, 281))
        self.frame_3.setStyleSheet("background-color: #eeeeee;   /* 背景色 */\n"
"    border: 1px solid #cccccc;  /* 灰色边框 */\n"
" border: 2px solid #b0c4de;   /* 边框 */")
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.btnAdd = QtWidgets.QPushButton(self.frame_3)
        self.btnAdd.setGeometry(QtCore.QRect(17, 20, 200, 50))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.btnAdd.setFont(font)
        self.btnAdd.setStyleSheet("QPushButton {\n"
"border: 1px solid black; /* 浅蓝色边框 */\n"
"border-radius: 5px; /* 圆角 */\n"
"background-color: #ffffff;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #eeeeee; /* 鼠标悬停时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #dddddd; /* 按钮按下时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"    background-color: #cccccc; /* 按钮禁用时的背景颜色 */\n"
"    color: black; /* 按钮禁用时的文本颜色 */\n"
"    border: 1px solid black; /* 按钮禁用时的边框颜色 */\n"
"}")
        self.btnAdd.setObjectName("btnAdd")
        self.btnDelete = QtWidgets.QPushButton(self.frame_3)
        self.btnDelete.setGeometry(QtCore.QRect(17, 80, 200, 50))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.btnDelete.setFont(font)
        self.btnDelete.setStyleSheet("QPushButton {\n"
"border: 1px solid black; /* 浅蓝色边框 */\n"
"border-radius: 5px; /* 圆角 */\n"
"background-color: #ffffff;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #eeeeee; /* 鼠标悬停时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #dddddd; /* 按钮按下时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"    background-color: #cccccc; /* 按钮禁用时的背景颜色 */\n"
"    color: black; /* 按钮禁用时的文本颜色 */\n"
"    border: 1px solid black; /* 按钮禁用时的边框颜色 */\n"
"}")
        self.btnDelete.setObjectName("btnDelete")
        self.textEdit_5 = QtWidgets.QTextEdit(self.frame_3)
        self.textEdit_5.setGeometry(QtCore.QRect(17, 150, 200, 121))
        self.textEdit_5.setStyleSheet("\n"
"background-color: #eeeeee;   /* 背景色 */\n"
"    border: 1px solid #cccccc;  /* 灰色边框 */\n"
" border: 2px solid #b0c4de;   /* 边框 */\n"
"    border-radius: 10px;  /* 圆角 */\n"
"    padding: 5px;  /* 内边距 */\n"
"    color: #333333;  /* 文字颜色 */\n"
"    font-family: \"Microsoft YaHei\", sans-serif;  /* 字体 */\n"
"    selection-background-color: #b8d6f3;  /* 选中文本背景色 */\n"
"    selection-color: #000000;  /* 选中文本颜色 */")
        self.textEdit_5.setObjectName("textEdit_5")
        self.frame_3.raise_()
        self.frame_2.raise_()
        self.graphicsView.raise_()
        self.tableWidget.raise_()
        self.tableWidget_product.raise_()
        self.textEdit_2.raise_()
        self.tabWidget.addTab(self.tabWidgetPage2, "")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.frame = QtWidgets.QFrame(self.tab)
        self.frame.setGeometry(QtCore.QRect(20, 10, 511, 231))
        self.frame.setStyleSheet("background-color: #eeeeee;   /* 背景色 */\n"
"    border: 2px solid #cccccc;  /* 灰色边框 */\n"
" border: 2px solid #b0c4de;   /* 边框 */")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.btn_Calibration = QtWidgets.QPushButton(self.frame)
        self.btn_Calibration.setGeometry(QtCore.QRect(60, 30, 400, 70))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.btn_Calibration.setFont(font)
        self.btn_Calibration.setStyleSheet("QPushButton {\n"
"border: 1px solid black; /* 浅蓝色边框 */\n"
"border-radius: 5px; /* 圆角 */\n"
"background-color: #ffffff;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #eeeeee; /* 鼠标悬停时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #dddddd; /* 按钮按下时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"    background-color: #cccccc; /* 按钮禁用时的背景颜色 */\n"
"    color: black; /* 按钮禁用时的文本颜色 */\n"
"    border: 1px solid black; /* 按钮禁用时的边框颜色 */\n"
"}")
        self.btn_Calibration.setObjectName("btn_Calibration")
        self.btn_test_rough = QtWidgets.QPushButton(self.frame)
        self.btn_test_rough.setGeometry(QtCore.QRect(60, 130, 195, 70))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.btn_test_rough.setFont(font)
        self.btn_test_rough.setStyleSheet("QPushButton {\n"
"border: 1px solid black; /* 浅蓝色边框 */\n"
"border-radius: 5px; /* 圆角 */\n"
"background-color: #ffffff;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #eeeeee; /* 鼠标悬停时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #dddddd; /* 按钮按下时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"    background-color: #cccccc; /* 按钮禁用时的背景颜色 */\n"
"    color: black; /* 按钮禁用时的文本颜色 */\n"
"    border: 1px solid black; /* 按钮禁用时的边框颜色 */\n"
"}")
        self.btn_test_rough.setObjectName("btn_test_rough")
        self.btn_test_accurate = QtWidgets.QPushButton(self.frame)
        self.btn_test_accurate.setGeometry(QtCore.QRect(265, 130, 195, 70))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.btn_test_accurate.setFont(font)
        self.btn_test_accurate.setStyleSheet("QPushButton {\n"
"border: 1px solid black; /* 浅蓝色边框 */\n"
"border-radius: 5px; /* 圆角 */\n"
"background-color: #ffffff;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #eeeeee; /* 鼠标悬停时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #dddddd; /* 按钮按下时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"    background-color: #cccccc; /* 按钮禁用时的背景颜色 */\n"
"    color: black; /* 按钮禁用时的文本颜色 */\n"
"    border: 1px solid black; /* 按钮禁用时的边框颜色 */\n"
"}")
        self.btn_test_accurate.setObjectName("btn_test_accurate")
        self.label_video_2 = QtWidgets.QLabel(self.tab)
        self.label_video_2.setGeometry(QtCore.QRect(550, 10, 1100, 825))
        font = QtGui.QFont()
        font.setPointSize(28)
        self.label_video_2.setFont(font)
        self.label_video_2.setAutoFillBackground(False)
        self.label_video_2.setStyleSheet("background-color: #eeeeee;   /* 背景色 */\n"
"    border: 1px solid #cccccc;  /* 灰色边框 */\n"
" border: 2px solid #b0c4de;   /* 边框 */")
        self.label_video_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_video_2.setObjectName("label_video_2")
        self.frame_5 = QtWidgets.QFrame(self.tab)
        self.frame_5.setGeometry(QtCore.QRect(20, 250, 511, 281))
        self.frame_5.setStyleSheet("background-color: #eeeeee;   /* 背景色 */\n"
"    border: 2px solid #cccccc;  /* 灰色边框 */\n"
" border: 2px solid #b0c4de;   /* 边框 */")
        self.frame_5.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_5.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_5.setObjectName("frame_5")
        self.btn_Ruler_rough = QtWidgets.QPushButton(self.frame_5)
        self.btn_Ruler_rough.setGeometry(QtCore.QRect(50, 100, 400, 70))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.btn_Ruler_rough.setFont(font)
        self.btn_Ruler_rough.setStyleSheet("QPushButton {\n"
"border: 1px solid black; /* 浅蓝色边框 */\n"
"border-radius: 5px; /* 圆角 */\n"
"background-color: #ffffff;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #eeeeee; /* 鼠标悬停时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #dddddd; /* 按钮按下时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"    background-color: #cccccc; /* 按钮禁用时的背景颜色 */\n"
"    color: black; /* 按钮禁用时的文本颜色 */\n"
"    border: 1px solid black; /* 按钮禁用时的边框颜色 */\n"
"}")
        self.btn_Ruler_rough.setObjectName("btn_Ruler_rough")
        self.label_5 = QtWidgets.QLabel(self.frame_5)
        self.label_5.setGeometry(QtCore.QRect(60, 30, 161, 40))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_5.setFont(font)
        self.label_5.setStyleSheet("    background-color: #ffffff;\n"
"    border:0px solid #cccccc;\n"
"    border-radius: 0px;\n"
"background-color: #eeeeee;   /* 背景色 */")
        self.label_5.setAlignment(QtCore.Qt.AlignCenter)
        self.label_5.setObjectName("label_5")
        self.lineEdit_length = QtWidgets.QLineEdit(self.frame_5)
        self.lineEdit_length.setGeometry(QtCore.QRect(220, 30, 150, 40))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.lineEdit_length.setFont(font)
        self.lineEdit_length.setStyleSheet("\n"
"    border: 1px solid black; /* 设置对话框的边框颜色 */\n"
"    border-radius: 5px; /* 设置对话框的圆角 */\n"
"background-color: white;\n"
"")
        self.lineEdit_length.setText("")
        self.lineEdit_length.setObjectName("lineEdit_length")
        self.btn_Ruler_accurate = QtWidgets.QPushButton(self.frame_5)
        self.btn_Ruler_accurate.setGeometry(QtCore.QRect(50, 190, 400, 70))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.btn_Ruler_accurate.setFont(font)
        self.btn_Ruler_accurate.setStyleSheet("QPushButton {\n"
"border: 1px solid black; /* 浅蓝色边框 */\n"
"border-radius: 5px; /* 圆角 */\n"
"background-color: #ffffff;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #eeeeee; /* 鼠标悬停时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #dddddd; /* 按钮按下时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"    background-color: #cccccc; /* 按钮禁用时的背景颜色 */\n"
"    color: black; /* 按钮禁用时的文本颜色 */\n"
"    border: 1px solid black; /* 按钮禁用时的边框颜色 */\n"
"}")
        self.btn_Ruler_accurate.setObjectName("btn_Ruler_accurate")
        self.label_6 = QtWidgets.QLabel(self.frame_5)
        self.label_6.setGeometry(QtCore.QRect(370, 30, 51, 40))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_6.setFont(font)
        self.label_6.setStyleSheet("    background-color: #ffffff;\n"
"    border:0px solid #cccccc;\n"
"    border-radius: 0px;\n"
"background-color: #eeeeee;   /* 背景色 */")
        self.label_6.setAlignment(QtCore.Qt.AlignCenter)
        self.label_6.setObjectName("label_6")
        self.textEdit_3 = QtWidgets.QTextEdit(self.tab)
        self.textEdit_3.setGeometry(QtCore.QRect(20, 540, 511, 151))
        self.textEdit_3.setStyleSheet("\n"
"background-color: #eeeeee;   /* 背景色 */\n"
"    border: 1px solid #cccccc;  /* 灰色边框 */\n"
" border: 2px solid #b0c4de;   /* 边框 */\n"
"    border-radius: 10px;  /* 圆角 */\n"
"    padding: 5px;  /* 内边距 */\n"
"    color: #333333;  /* 文字颜色 */\n"
"    font-family: \"Microsoft YaHei\", sans-serif;  /* 字体 */\n"
"    font-size: 32px;  /* 字体大小 */\n"
"    selection-background-color: #b8d6f3;  /* 选中文本背景色 */\n"
"    selection-color: #000000;  /* 选中文本颜色 */")
        self.textEdit_3.setObjectName("textEdit_3")
        self.textEdit_info_p3 = QtWidgets.QTextEdit(self.tab)
        self.textEdit_info_p3.setGeometry(QtCore.QRect(20, 700, 511, 191))
        self.textEdit_info_p3.setStyleSheet("\n"
"background-color: #eeeeee;   /* 背景色 */\n"
"    border: 1px solid #cccccc;  /* 灰色边框 */\n"
" border: 2px solid #b0c4de;   /* 边框 */\n"
"    border-radius: 10px;  /* 圆角 */\n"
"    padding: 5px;  /* 内边距 */\n"
"    color: #333333;  /* 文字颜色 */\n"
"    font-family: \"Microsoft YaHei\", sans-serif;  /* 字体 */\n"
"    font-size: 32px;  /* 字体大小 */\n"
"    selection-background-color: #b8d6f3;  /* 选中文本背景色 */\n"
"    selection-color: #000000;  /* 选中文本颜色 */")
        self.textEdit_info_p3.setObjectName("textEdit_info_p3")
        self.label_led = QtWidgets.QLabel(self.tab)
        self.label_led.setGeometry(QtCore.QRect(1570, 840, 60, 60))
        self.label_led.setStyleSheet("background-color: green;\n"
"border-radius: 30px;")
        self.label_led.setText("")
        self.label_led.setObjectName("label_led")
        self.label_video_2.raise_()
        self.frame.raise_()
        self.frame_5.raise_()
        self.textEdit_3.raise_()
        self.textEdit_info_p3.raise_()
        self.label_led.raise_()
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.label_video_3 = QtWidgets.QLabel(self.tab_2)
        self.label_video_3.setGeometry(QtCore.QRect(10, 30, 1050, 788))
        font = QtGui.QFont()
        font.setPointSize(28)
        self.label_video_3.setFont(font)
        self.label_video_3.setAutoFillBackground(False)
        self.label_video_3.setStyleSheet("background-color: #eeeeee;   /* 背景色 */\n"
"    border: 1px solid #cccccc;  /* 灰色边框 */\n"
" border: 2px solid #b0c4de;   /* 边框 */")
        self.label_video_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_video_3.setObjectName("label_video_3")
        self.frame_6 = QtWidgets.QFrame(self.tab_2)
        self.frame_6.setGeometry(QtCore.QRect(1070, 120, 591, 141))
        self.frame_6.setStyleSheet("background-color: #fafafa;   /* 背景色 */\n"
"    border: 2px solid #cccccc;  /* 灰色边框 */\n"
" border: 2px solid #b0c4de;   /* 边框 */")
        self.frame_6.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_6.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_6.setObjectName("frame_6")
        self.radioButton_accurate = QtWidgets.QRadioButton(self.frame_6)
        self.radioButton_accurate.setGeometry(QtCore.QRect(10, 80, 160, 40))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.radioButton_accurate.setFont(font)
        self.radioButton_accurate.setStyleSheet("    background-color: #fafafa;\n"
"    border:0px solid #cccccc;\n"
"    border-radius: 0px;")
        self.radioButton_accurate.setObjectName("radioButton_accurate")
        self.radioButton_rough = QtWidgets.QRadioButton(self.frame_6)
        self.radioButton_rough.setGeometry(QtCore.QRect(10, 20, 160, 40))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.radioButton_rough.setFont(font)
        self.radioButton_rough.setStyleSheet("    background-color: #fafafa;\n"
"    border:0px solid #cccccc;\n"
"    border-radius: 0px;")
        self.radioButton_rough.setObjectName("radioButton_rough")
        self.pushButton_roughpos = QtWidgets.QPushButton(self.frame_6)
        self.pushButton_roughpos.setGeometry(QtCore.QRect(380, 20, 200, 40))
        self.pushButton_roughpos.setStyleSheet("QPushButton {\n"
"border: 1px solid black; /* 浅蓝色边框 */\n"
"border-radius: 5px; /* 圆角 */\n"
"background-color: #ffffff;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #eeeeee; /* 鼠标悬停时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #dddddd; /* 按钮按下时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"    background-color: #cccccc; /* 按钮禁用时的背景颜色 */\n"
"    color: black; /* 按钮禁用时的文本颜色 */\n"
"    border: 1px solid black; /* 按钮禁用时的边框颜色 */\n"
"}")
        self.pushButton_roughpos.setObjectName("pushButton_roughpos")
        self.pushButton_accuratepos = QtWidgets.QPushButton(self.frame_6)
        self.pushButton_accuratepos.setGeometry(QtCore.QRect(380, 80, 200, 40))
        self.pushButton_accuratepos.setStyleSheet("QPushButton {\n"
"border: 1px solid black; /* 浅蓝色边框 */\n"
"border-radius: 5px; /* 圆角 */\n"
"background-color: #ffffff;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #eeeeee; /* 鼠标悬停时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #dddddd; /* 按钮按下时的背景颜色 */\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"    background-color: #cccccc; /* 按钮禁用时的背景颜色 */\n"
"    color: black; /* 按钮禁用时的文本颜色 */\n"
"    border: 1px solid black; /* 按钮禁用时的边框颜色 */\n"
"}")
        self.pushButton_accuratepos.setObjectName("pushButton_accuratepos")
        self.frame_7 = QtWidgets.QFrame(self.tab_2)
        self.frame_7.setGeometry(QtCore.QRect(1070, 270, 591, 351))
        self.frame_7.setStyleSheet("background-color: #fafafa;   /* 背景色 */\n"
"    border: 2px solid #cccccc;  /* 灰色边框 */\n"
" border: 2px solid #b0c4de;   /* 边框 */")
        self.frame_7.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_7.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_7.setObjectName("frame_7")
        self.checkBox_autofocus = QtWidgets.QCheckBox(self.frame_7)
        self.checkBox_autofocus.setGeometry(QtCore.QRect(460, 260, 111, 40))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.checkBox_autofocus.setFont(font)
        self.checkBox_autofocus.setStyleSheet("    background-color: #fafafa;\n"
"    border:0px solid #cccccc;\n"
"    border-radius: 0px;")
        self.checkBox_autofocus.setObjectName("checkBox_autofocus")
        self.horizontalSlider_focus = QtWidgets.QSlider(self.frame_7)
        self.horizontalSlider_focus.setGeometry(QtCore.QRect(90, 230, 400, 41))
        self.horizontalSlider_focus.setStyleSheet("    background-color: #fafafa;\n"
"    border:0px solid #cccccc;\n"
"    border-radius: 0px;")
        self.horizontalSlider_focus.setMaximum(1022)
        self.horizontalSlider_focus.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_focus.setObjectName("horizontalSlider_focus")
        self.label_exposure = QtWidgets.QLabel(self.frame_7)
        self.label_exposure.setGeometry(QtCore.QRect(510, 130, 61, 40))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.label_exposure.setFont(font)
        self.label_exposure.setStyleSheet("    background-color: #fafafa;\n"
"    border:0px solid #cccccc;\n"
"    border-radius: 0px;")
        self.label_exposure.setObjectName("label_exposure")
        self.checkBox_autoexposure = QtWidgets.QCheckBox(self.frame_7)
        self.checkBox_autoexposure.setGeometry(QtCore.QRect(460, 160, 111, 40))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.checkBox_autoexposure.setFont(font)
        self.checkBox_autoexposure.setStyleSheet("    background-color: #fafafa;\n"
"    border:0px solid #cccccc;\n"
"    border-radius: 0px;")
        self.checkBox_autoexposure.setObjectName("checkBox_autoexposure")
        self.label = QtWidgets.QLabel(self.frame_7)
        self.label.setGeometry(QtCore.QRect(10, 50, 80, 40))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.label.setFont(font)
        self.label.setStyleSheet("    background-color: #fafafa;\n"
"    border:0px solid #cccccc;\n"
"    border-radius: 0px;")
        self.label.setObjectName("label")
        self.label_7 = QtWidgets.QLabel(self.frame_7)
        self.label_7.setGeometry(QtCore.QRect(10, 230, 140, 40))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.label_7.setFont(font)
        self.label_7.setStyleSheet("    background-color: #fafafa;\n"
"    border:0px solid #cccccc;\n"
"    border-radius: 0px;")
        self.label_7.setObjectName("label_7")
        self.label_focus = QtWidgets.QLabel(self.frame_7)
        self.label_focus.setGeometry(QtCore.QRect(510, 230, 61, 40))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.label_focus.setFont(font)
        self.label_focus.setStyleSheet("    background-color: #fafafa;\n"
"    border:0px solid #cccccc;\n"
"    border-radius: 0px;")
        self.label_focus.setObjectName("label_focus")
        self.label_4 = QtWidgets.QLabel(self.frame_7)
        self.label_4.setGeometry(QtCore.QRect(10, 130, 140, 40))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.label_4.setFont(font)
        self.label_4.setStyleSheet("    background-color: #fafafa;\n"
"    border:0px solid #cccccc;\n"
"    border-radius: 0px;")
        self.label_4.setObjectName("label_4")
        self.label_fps = QtWidgets.QLabel(self.frame_7)
        self.label_fps.setGeometry(QtCore.QRect(510, 50, 61, 40))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.label_fps.setFont(font)
        self.label_fps.setStyleSheet("    background-color: #fafafa;\n"
"    border:0px solid #cccccc;\n"
"    border-radius: 0px;")
        self.label_fps.setObjectName("label_fps")
        self.horizontalSlider_exposure = QtWidgets.QSlider(self.frame_7)
        self.horizontalSlider_exposure.setGeometry(QtCore.QRect(90, 130, 400, 41))
        self.horizontalSlider_exposure.setStyleSheet("    background-color: #fafafa;\n"
"    border:0px solid #cccccc;\n"
"    border-radius: 0px;")
        self.horizontalSlider_exposure.setMinimum(50)
        self.horizontalSlider_exposure.setMaximum(10000)
        self.horizontalSlider_exposure.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_exposure.setObjectName("horizontalSlider_exposure")
        self.horizontalSlider_fps = QtWidgets.QSlider(self.frame_7)
        self.horizontalSlider_fps.setGeometry(QtCore.QRect(90, 50, 400, 41))
        self.horizontalSlider_fps.setStyleSheet("    background-color: #fafafa;\n"
"    border:0px solid #cccccc;\n"
"    border-radius: 0px;")
        self.horizontalSlider_fps.setMaximum(60)
        self.horizontalSlider_fps.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_fps.setObjectName("horizontalSlider_fps")
        self.label_7.raise_()
        self.checkBox_autofocus.raise_()
        self.horizontalSlider_focus.raise_()
        self.label_exposure.raise_()
        self.checkBox_autoexposure.raise_()
        self.label.raise_()
        self.label_focus.raise_()
        self.label_4.raise_()
        self.label_fps.raise_()
        self.horizontalSlider_exposure.raise_()
        self.horizontalSlider_fps.raise_()
        self.label_led_3 = QtWidgets.QLabel(self.tab_2)
        self.label_led_3.setGeometry(QtCore.QRect(1600, 758, 60, 60))
        self.label_led_3.setStyleSheet("background-color: green;\n"
"border-radius: 30px;")
        self.label_led_3.setText("")
        self.label_led_3.setObjectName("label_led_3")
        self.tabWidget.addTab(self.tab_2, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.tabWidget.addTab(self.tab_3, "")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1680, 28))
        self.menubar.setObjectName("menubar")
        self.menuGLUEMASTER = QtWidgets.QMenu(self.menubar)
        self.menuGLUEMASTER.setObjectName("menuGLUEMASTER")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.action = QtWidgets.QAction(MainWindow)
        self.action.setObjectName("action")
        self.menuGLUEMASTER.addSeparator()
        self.menuGLUEMASTER.addAction(self.action)
        self.menubar.addAction(self.menuGLUEMASTER.menuAction())

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(3)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label_video.setText(_translate("MainWindow", "Video"))
        self.label_beltspeed.setText(_translate("MainWindow", "传送带的速度为 : 100.000 mm/s"))
        item = self.tableWidget_number.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "已开启的模板"))
        item = self.tableWidget_number.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "已点胶个数"))
        self.textEdit.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Microsoft YaHei\',\'sans-serif\'; font-size:32px; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:24pt;\">提示信息：</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:24pt;\">         如果您更换了摄像头或改变了摄像头位置，请前往“基本参数调整”页面重新校准及标定！</span></p></body></html>"))
        self.btn_Reset.setText(_translate("MainWindow", "复位"))
        self.btn_Stop.setText(_translate("MainWindow", "停止"))
        self.btn_Start.setText(_translate("MainWindow", "开始"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabWidgetPage1), _translate("MainWindow", "控制主页"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "动作类型"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "初始点(mm)"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "终点/圆心(mm)"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "位移矢量(mm)"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "动作时间(s)"))
        item = self.tableWidget.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "胶头高度(mm)"))
        item = self.tableWidget_product.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "模板名称"))
        item = self.tableWidget_product.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "是否启用"))
        self.textEdit_2.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Microsoft YaHei\',\'sans-serif\'; font-size:32px; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:24pt;\">提示信息：</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:24pt;\">         如果您更换了摄像头或改变了摄像头位置，请先进行校准及标定，请勿直接添加新模板。</span></p></body></html>"))
        self.btnAddProduct.setText(_translate("MainWindow", "添加新模板"))
        self.btnExport.setText(_translate("MainWindow", "导出新模板"))
        self.btnDeleteProduct.setText(_translate("MainWindow", "删除模板"))
        self.btnSave.setText(_translate("MainWindow", "保存修改"))
        self.btnRestore.setText(_translate("MainWindow", "重置模板"))
        self.btnEdit.setText(_translate("MainWindow", "编辑模板"))
        self.btnAdd.setText(_translate("MainWindow", "添加新动作"))
        self.btnDelete.setText(_translate("MainWindow", "删除动作"))
        self.textEdit_5.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Microsoft YaHei\',\'sans-serif\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:16pt;\">如果需要，请记得修改点胶时的动作时间和胶头高度！</span></p></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabWidgetPage2), _translate("MainWindow", "模板设置"))
        self.btn_Calibration.setText(_translate("MainWindow", "校准"))
        self.btn_test_rough.setText(_translate("MainWindow", "尝试匹配粗模板"))
        self.btn_test_accurate.setText(_translate("MainWindow", "尝试匹配精模板"))
        self.label_video_2.setText(_translate("MainWindow", "Video"))
        self.btn_Ruler_rough.setText(_translate("MainWindow", "粗识别摄像头标定"))
        self.label_5.setText(_translate("MainWindow", "棋盘格方格边长："))
        self.btn_Ruler_accurate.setText(_translate("MainWindow", "精识别摄像头标定"))
        self.label_6.setText(_translate("MainWindow", "mm"))
        self.textEdit_3.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Microsoft YaHei\',\'sans-serif\'; font-size:32px; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:16pt; font-weight:600; font-style:italic; color:#ff0000;\">警告：</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:16pt; font-weight:600; font-style:italic; color:#ff0000;\">(1)使用校准以及标定功能后，所有保存的模板都将作废，请谨慎使用！</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:16pt; font-weight:600; font-style:italic; color:#ff0000;\">(2)使用模板测试前请先将该模板启用！</span></p></body></html>"))
        self.textEdit_info_p3.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Microsoft YaHei\',\'sans-serif\'; font-size:32px; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:16pt;\">提示信息：</span></p></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "系统参数设置"))
        self.label_video_3.setText(_translate("MainWindow", "Video"))
        self.radioButton_accurate.setText(_translate("MainWindow", "精识别摄像头"))
        self.radioButton_rough.setText(_translate("MainWindow", "粗识别摄像头"))
        self.pushButton_roughpos.setText(_translate("MainWindow", "校准视角1"))
        self.pushButton_accuratepos.setText(_translate("MainWindow", "校准视角2"))
        self.checkBox_autofocus.setText(_translate("MainWindow", "自动聚焦"))
        self.label_exposure.setText(_translate("MainWindow", "10000"))
        self.checkBox_autoexposure.setText(_translate("MainWindow", "自动曝光"))
        self.label.setText(_translate("MainWindow", "帧率："))
        self.label_7.setText(_translate("MainWindow", "焦距："))
        self.label_focus.setText(_translate("MainWindow", "10000"))
        self.label_4.setText(_translate("MainWindow", "曝光："))
        self.label_fps.setText(_translate("MainWindow", "10000"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "摄像头参数设置"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("MainWindow", "系统信息"))
        self.menuGLUEMASTER.setTitle(_translate("MainWindow", "GLUEMASTER"))
        self.action.setText(_translate("MainWindow", "用户手册（使用前必读）"))
